---
- name: Ensure required packages are installed
  yum:
    name: yum-plugin-versionlock

- name: Remove the old mongodb repository
  file:
    path: "/etc/yum.repos.d/mongodb-{{ current_mongodb_version }}.repo"
    state: absent
  when: current_mongodb_version is defined

- name: Ensure the target mongodb repository exists
  copy:
    dest: "/etc/yum.repos.d/mongodb-{{ target_mongodb_version }}.repo"
    content: |
      [mongodb-{{ target_mongodb_version }}]
      baseurl = https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/{{ target_mongodb_version }}/x86_64/
      gpgcheck = 1
      gpgkey = https://www.mongodb.org/static/pgp/server-{{ target_mongodb_version }}.asc
      name = Official MongoDB {{ target_mongodb_version }} yum repo
    owner: root
    group: root
    mode: 0644
  register: new_mongo
  when: target_mongodb_version is defined

- name: yum-clean-metadata
  command: yum clean metadata
  args:
    warn: no
  when:
    - target_mongodb_version is defined
    - new_mongo.changed

- name: Ensure mongodb-org* packages are version unlocked
  shell: yum versionlock delete mongodb-org*

- name: Remove version lock confirmation file
  file:
    path: /root/mongo_version_lock.success
    state: absent

- name: Shutdown the mongod process cleanly
  community.mongodb.mongodb_shutdown:
    login_user: "{{ admin_user }}"
    login_password: "{{ admin_user_password }}"
    login_port: "{{ mongod_port }}"

- name: Upgrade mongod package
  yum:
    name: mongodb-org-server
    state: latest
  register: mongod_upgraded

- name: Reboot the node
  reboot:
    reboot_timeout: 3600
  when: mongod_upgraded.changed
  tags:
    - reboot

- name: RedHat 8 in docker fix
  import_tasks: redhat8_docker_fix.yml
  tags:
    - never

- name: Ensure mongod service starts
  service:
    name: mongod
    state: started
    enabled: yes

- name: Wait for mongod to become active
  wait_for:
    port: "{{ mongod_port }}"
    delay: 10

- name: Check the version of mongod
  shell: mongod --version | head -n 1
  register: mongod
  when: target_mongodb_version is defined

- name: Validate the running version of mongod
  assert:
    that: "'{{ target_mongodb_version }}' in mongod.stdout"
  when: target_mongodb_version is defined

- name: Ensure mongodb-org* packages are version locked again
  shell: yum versionlock mongodb-org* && touch /root/mongo_version_lock.success
  args:
    creates: /root/mongo_version_lock.success
