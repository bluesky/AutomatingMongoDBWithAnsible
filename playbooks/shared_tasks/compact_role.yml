---
- name: Create custom role file
  copy:
    content: |
      db.dropRole("compactLocal", { w: "majority" });
      db.createRole(
      {
        role: "compactLocal",
        privileges: [
        {
            resource: { "db" : "local" , "collection" : "oplog.rs" },
            actions: [ "compact" ]
         }
         ],
         roles: []
       }
      );
    dest: mongodb_role.js
  run_once: yes

- name: Run role file via the cmd line
  shell: mongo admin --host {{ rs }}/localhost:{{ mongod_port }} --username {{ admin_user }} --password {{ admin_user_password }} mongodb_role.js && touch compact_role.success
  args:
    creates: compact_role.success
  run_once: yes

- name: Create the file to assign the role
  copy:
    content: |
            db.getSiblingDB("admin").grantRolesToUser( "{{ admin_user }}",
              [ { role: "compactLocal", db: "admin" } ],
              {  w: "majority", wtimeout: 4000 }
            );
    dest: compact_admin.js
  run_once: yes

- name: Run compact_admin.js file via the cmd line
  shell: mongo admin --host cfg/localhost:27019 --username {{ admin_user }} --password {{ admin_user_password }} compact_admin.js && touch compact_admin.success
  args:
    creates: compact_admin.success
  run_once: yes
